version: '3.9'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    build: .
    ports:
      - "8000:8000" # 默认端口为 8000
    volumes:
      - ./shop_project:/app  # Mount only the shop_project folder
      - ./wait-for-it.sh:/app/wait-for-it.sh  # Mount the wait-for-it.sh script
      - static_volume:/app/static-files  # Mount static files
      - media_volume:/app/media  # Mount media files
      - ${DJANGO_LOG_ROOT}:/app/logs
    depends_on:
      - db
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      HOST_NAME: ${HOST_NAME}
      GOOGLE_OAUTH2_KEY: ${GOOGLE_OAUTH2_KEY}
      GOOGLE_OAUTH2_SECRET: ${GOOGLE_OAUTH2_SECRET}
      GOOGLE_OAUTH2_CALLBACK_URL: ${GOOGLE_OAUTH2_CALLBACK_URL}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      SERVER_BASE_URL: http://web:8000
      IS_DEBUG: ${IS_DEBUG}
    command: >
      sh -c "/app/wait-for-it.sh db:5432 -- python manage.py collectstatic --noinput && 
      python manage.py makemigrations && 
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_ROOT}:/var/log/nginx
      - static_volume:/static  # Serve static files
      - media_volume:/media
    ports:
      - "80:80"
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume: